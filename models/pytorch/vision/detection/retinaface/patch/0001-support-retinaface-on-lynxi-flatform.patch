From 453196e70f892fdeec4d81cee50f3de74151b6f1 Mon Sep 17 00:00:00 2001
From: "shuangquan.he" <shuangquan.he@lynxi.com>
Date: Thu, 23 Jun 2022 09:22:12 +0800
Subject: [PATCH] support retinaface on lynxi flatform

---
 curve/img_640_640.jpg | Bin 0 -> 104601 bytes
 detect.py             | 100 +++++++++++++++++++--------
 models/retinaface.py  | 106 ++++++++++++++++++----------
 test_lynxi.py         | 187 ++++++++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 328 insertions(+), 65 deletions(-)
 create mode 100755 curve/img_640_640.jpg
 mode change 100644 => 100755 models/retinaface.py
 create mode 100755 test_lynxi.py

diff --git a/curve/img_640_640.jpg b/curve/img_640_640.jpg
new file mode 100755
index 0000000000000000000000000000000000000000..4e4071933de969ce181dd2f32f0170ad03d380a8
GIT binary patch
literal 104601
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

literal 0
HcmV?d00001

diff --git a/detect.py b/detect.py
index 2e82240..b196485 100755
--- a/detect.py
+++ b/detect.py
@@ -11,19 +11,43 @@ import cv2
 from models.retinaface import RetinaFace
 from utils.box_utils import decode, decode_landm
 import time
+import pickle
+
+TOP = os.environ['TOP']
 
 parser = argparse.ArgumentParser(description='Retinaface')
 
-parser.add_argument('-m', '--trained_model', default='./weights/Resnet50_Final.pth',
-                    type=str, help='Trained state_dict file path to open')
-parser.add_argument('--network', default='resnet50', help='Backbone network mobile0.25 or resnet50')
-parser.add_argument('--cpu', action="store_true", default=False, help='Use cpu inference')
-parser.add_argument('--confidence_threshold', default=0.02, type=float, help='confidence_threshold')
+parser.add_argument('-m',
+                    '--trained_model',
+                    default='./weights/Resnet50_Final.pth',
+                    type=str,
+                    help='Trained state_dict file path to open')
+parser.add_argument('--network',
+                    default='resnet50',
+                    help='Backbone network mobile0.25 or resnet50')
+parser.add_argument('--cpu',
+                    action="store_true",
+                    default=False,
+                    help='Use cpu inference')
+parser.add_argument('--confidence_threshold',
+                    default=0.02,
+                    type=float,
+                    help='confidence_threshold')
 parser.add_argument('--top_k', default=5000, type=int, help='top_k')
-parser.add_argument('--nms_threshold', default=0.4, type=float, help='nms_threshold')
+parser.add_argument('--nms_threshold',
+                    default=0.4,
+                    type=float,
+                    help='nms_threshold')
 parser.add_argument('--keep_top_k', default=750, type=int, help='keep_top_k')
-parser.add_argument('-s', '--save_image', action="store_true", default=True, help='show detection results')
-parser.add_argument('--vis_thres', default=0.6, type=float, help='visualization_threshold')
+parser.add_argument('-s',
+                    '--save_image',
+                    action="store_true",
+                    default=True,
+                    help='show detection results')
+parser.add_argument('--vis_thres',
+                    default=0.6,
+                    type=float,
+                    help='visualization_threshold')
 args = parser.parse_args()
 
 
@@ -36,7 +60,8 @@ def check_keys(model, pretrained_state_dict):
     print('Missing keys:{}'.format(len(missing_keys)))
     print('Unused checkpoint keys:{}'.format(len(unused_pretrained_keys)))
     print('Used keys:{}'.format(len(used_pretrained_keys)))
-    assert len(used_pretrained_keys) > 0, 'load NONE from pretrained checkpoint'
+    assert len(
+        used_pretrained_keys) > 0, 'load NONE from pretrained checkpoint'
     return True
 
 
@@ -50,12 +75,16 @@ def remove_prefix(state_dict, prefix):
 def load_model(model, pretrained_path, load_to_cpu):
     print('Loading pretrained model from {}'.format(pretrained_path))
     if load_to_cpu:
-        pretrained_dict = torch.load(pretrained_path, map_location=lambda storage, loc: storage)
+        pretrained_dict = torch.load(pretrained_path,
+                                     map_location=lambda storage, loc: storage)
     else:
         device = torch.cuda.current_device()
-        pretrained_dict = torch.load(pretrained_path, map_location=lambda storage, loc: storage.cuda(device))
+        pretrained_dict = torch.load(
+            pretrained_path,
+            map_location=lambda storage, loc: storage.cuda(device))
     if "state_dict" in pretrained_dict.keys():
-        pretrained_dict = remove_prefix(pretrained_dict['state_dict'], 'module.')
+        pretrained_dict = remove_prefix(pretrained_dict['state_dict'],
+                                        'module.')
     else:
         pretrained_dict = remove_prefix(pretrained_dict, 'module.')
     check_keys(model, pretrained_dict)
@@ -63,6 +92,11 @@ def load_model(model, pretrained_path, load_to_cpu):
     return model
 
 
+def dumpPickleAbs(data, absFile=None):
+    with open(absFile, 'wb') as fin:
+        pickle.dump(data, fin)
+
+
 if __name__ == '__main__':
     torch.set_grad_enabled(False)
     cfg = None
@@ -71,9 +105,12 @@ if __name__ == '__main__':
     elif args.network == "resnet50":
         cfg = cfg_re50
     # net and model
-    net = RetinaFace(cfg=cfg, phase = 'test')
+    net = RetinaFace(cfg=cfg, phase='test')
     net = load_model(net, args.trained_model, args.cpu)
     net.eval()
+
+    targetModelFile = "{}/curve/target_net.pth".format(TOP)
+    torch.save(net, targetModelFile)
     print('Finished loading model!')
     print(net)
     cudnn.benchmark = True
@@ -83,14 +120,15 @@ if __name__ == '__main__':
     resize = 1
 
     # testing begin
-    for i in range(100):
-        image_path = "./curve/test.jpg"
+    for i in range(1):
+        image_path = "./curve/img_640_640.jpg"
         img_raw = cv2.imread(image_path, cv2.IMREAD_COLOR)
 
         img = np.float32(img_raw)
 
         im_height, im_width, _ = img.shape
-        scale = torch.Tensor([img.shape[1], img.shape[0], img.shape[1], img.shape[0]])
+        scale = torch.Tensor(
+            [img.shape[1], img.shape[0], img.shape[1], img.shape[0]])
         img -= (104, 117, 123)
         img = img.transpose(2, 0, 1)
         img = torch.from_numpy(img).unsqueeze(0)
@@ -98,8 +136,12 @@ if __name__ == '__main__':
         scale = scale.to(device)
 
         tic = time.time()
+        dumpPickleAbs(img, "{}/curve/input.bin".format(TOP))
         loc, conf, landms = net(img)  # forward pass
         print('net forward time: {:.4f}'.format(time.time() - tic))
+        dumpPickleAbs([loc.numpy(), conf.numpy(),
+                       landms.numpy()],
+                      "{}/curve/output_target.bin".format(TOP))
 
         priorbox = PriorBox(cfg, image_size=(im_height, im_width))
         priors = priorbox.forward()
@@ -109,10 +151,13 @@ if __name__ == '__main__':
         boxes = boxes * scale / resize
         boxes = boxes.cpu().numpy()
         scores = conf.squeeze(0).data.cpu().numpy()[:, 1]
-        landms = decode_landm(landms.data.squeeze(0), prior_data, cfg['variance'])
-        scale1 = torch.Tensor([img.shape[3], img.shape[2], img.shape[3], img.shape[2],
-                               img.shape[3], img.shape[2], img.shape[3], img.shape[2],
-                               img.shape[3], img.shape[2]])
+        landms = decode_landm(landms.data.squeeze(0), prior_data,
+                              cfg['variance'])
+        scale1 = torch.Tensor([
+            img.shape[3], img.shape[2], img.shape[3], img.shape[2],
+            img.shape[3], img.shape[2], img.shape[3], img.shape[2],
+            img.shape[3], img.shape[2]
+        ])
         scale1 = scale1.to(device)
         landms = landms * scale1 / resize
         landms = landms.cpu().numpy()
@@ -130,7 +175,8 @@ if __name__ == '__main__':
         scores = scores[order]
 
         # do NMS
-        dets = np.hstack((boxes, scores[:, np.newaxis])).astype(np.float32, copy=False)
+        dets = np.hstack((boxes, scores[:, np.newaxis])).astype(np.float32,
+                                                                copy=False)
         keep = py_cpu_nms(dets, args.nms_threshold)
         # keep = nms(dets, args.nms_threshold,force_cpu=args.cpu)
         dets = dets[keep, :]
@@ -149,11 +195,12 @@ if __name__ == '__main__':
                     continue
                 text = "{:.4f}".format(b[4])
                 b = list(map(int, b))
-                cv2.rectangle(img_raw, (b[0], b[1]), (b[2], b[3]), (0, 0, 255), 2)
+                cv2.rectangle(img_raw, (b[0], b[1]), (b[2], b[3]), (0, 0, 255),
+                              2)
                 cx = b[0]
                 cy = b[1] + 12
-                cv2.putText(img_raw, text, (cx, cy),
-                            cv2.FONT_HERSHEY_DUPLEX, 0.5, (255, 255, 255))
+                cv2.putText(img_raw, text, (cx, cy), cv2.FONT_HERSHEY_DUPLEX,
+                            0.5, (255, 255, 255))
 
                 # landms
                 cv2.circle(img_raw, (b[5], b[6]), 1, (0, 0, 255), 4)
@@ -162,7 +209,4 @@ if __name__ == '__main__':
                 cv2.circle(img_raw, (b[11], b[12]), 1, (0, 255, 0), 4)
                 cv2.circle(img_raw, (b[13], b[14]), 1, (255, 0, 0), 4)
             # save image
-
-            name = "test.jpg"
-            cv2.imwrite(name, img_raw)
-
+            cv2.imwrite("{}/curve/test.jpg".format(TOP), img_raw)
diff --git a/models/retinaface.py b/models/retinaface.py
old mode 100644
new mode 100755
index d530bd8..67f5430
--- a/models/retinaface.py
+++ b/models/retinaface.py
@@ -10,54 +10,74 @@ from models.net import FPN as FPN
 from models.net import SSH as SSH
 
 
-
 class ClassHead(nn.Module):
-    def __init__(self,inchannels=512,num_anchors=3):
-        super(ClassHead,self).__init__()
+
+    def __init__(self, inchannels=512, num_anchors=3):
+        super(ClassHead, self).__init__()
         self.num_anchors = num_anchors
-        self.conv1x1 = nn.Conv2d(inchannels,self.num_anchors*2,kernel_size=(1,1),stride=1,padding=0)
+        self.conv1x1 = nn.Conv2d(inchannels,
+                                 self.num_anchors * 2,
+                                 kernel_size=(1, 1),
+                                 stride=1,
+                                 padding=0)
 
-    def forward(self,x):
+    def forward(self, x):
         out = self.conv1x1(x)
-        out = out.permute(0,2,3,1).contiguous()
-        
+        out = out.permute(0, 2, 3, 1).contiguous()
+
         return out.view(out.shape[0], -1, 2)
 
+
 class BboxHead(nn.Module):
-    def __init__(self,inchannels=512,num_anchors=3):
-        super(BboxHead,self).__init__()
-        self.conv1x1 = nn.Conv2d(inchannels,num_anchors*4,kernel_size=(1,1),stride=1,padding=0)
 
-    def forward(self,x):
+    def __init__(self, inchannels=512, num_anchors=3):
+        super(BboxHead, self).__init__()
+        self.conv1x1 = nn.Conv2d(inchannels,
+                                 num_anchors * 4,
+                                 kernel_size=(1, 1),
+                                 stride=1,
+                                 padding=0)
+
+    def forward(self, x):
         out = self.conv1x1(x)
-        out = out.permute(0,2,3,1).contiguous()
+        out = out.permute(0, 2, 3, 1).contiguous()
 
         return out.view(out.shape[0], -1, 4)
 
+
 class LandmarkHead(nn.Module):
-    def __init__(self,inchannels=512,num_anchors=3):
-        super(LandmarkHead,self).__init__()
-        self.conv1x1 = nn.Conv2d(inchannels,num_anchors*10,kernel_size=(1,1),stride=1,padding=0)
 
-    def forward(self,x):
+    def __init__(self, inchannels=512, num_anchors=3):
+        super(LandmarkHead, self).__init__()
+        self.conv1x1 = nn.Conv2d(inchannels,
+                                 num_anchors * 10,
+                                 kernel_size=(1, 1),
+                                 stride=1,
+                                 padding=0)
+
+    def forward(self, x):
         out = self.conv1x1(x)
-        out = out.permute(0,2,3,1).contiguous()
+        out = out.permute(0, 2, 3, 1).contiguous()
 
         return out.view(out.shape[0], -1, 10)
 
+
 class RetinaFace(nn.Module):
-    def __init__(self, cfg = None, phase = 'train'):
+
+    def __init__(self, cfg=None, phase='train'):
         """
         :param cfg:  Network related settings.
         :param phase: train or test.
         """
-        super(RetinaFace,self).__init__()
+        super(RetinaFace, self).__init__()
         self.phase = phase
         backbone = None
         if cfg['name'] == 'mobilenet0.25':
             backbone = MobileNetV1()
             if cfg['pretrain']:
-                checkpoint = torch.load("./weights/mobilenetV1X0.25_pretrain.tar", map_location=torch.device('cpu'))
+                checkpoint = torch.load(
+                    "./curve/mobilenetV1X0.25_pretrain.tar",
+                    map_location=torch.device('cpu'))
                 from collections import OrderedDict
                 new_state_dict = OrderedDict()
                 for k, v in checkpoint['state_dict'].items():
@@ -69,7 +89,8 @@ class RetinaFace(nn.Module):
             import torchvision.models as models
             backbone = models.resnet50(pretrained=cfg['pretrain'])
 
-        self.body = _utils.IntermediateLayerGetter(backbone, cfg['return_layers'])
+        self.body = _utils.IntermediateLayerGetter(backbone,
+                                                   cfg['return_layers'])
         in_channels_stage2 = cfg['in_channel']
         in_channels_list = [
             in_channels_stage2 * 2,
@@ -77,34 +98,37 @@ class RetinaFace(nn.Module):
             in_channels_stage2 * 8,
         ]
         out_channels = cfg['out_channel']
-        self.fpn = FPN(in_channels_list,out_channels)
+        self.fpn = FPN(in_channels_list, out_channels)
         self.ssh1 = SSH(out_channels, out_channels)
         self.ssh2 = SSH(out_channels, out_channels)
         self.ssh3 = SSH(out_channels, out_channels)
 
-        self.ClassHead = self._make_class_head(fpn_num=3, inchannels=cfg['out_channel'])
-        self.BboxHead = self._make_bbox_head(fpn_num=3, inchannels=cfg['out_channel'])
-        self.LandmarkHead = self._make_landmark_head(fpn_num=3, inchannels=cfg['out_channel'])
+        self.ClassHead = self._make_class_head(fpn_num=3,
+                                               inchannels=cfg['out_channel'])
+        self.BboxHead = self._make_bbox_head(fpn_num=3,
+                                             inchannels=cfg['out_channel'])
+        self.LandmarkHead = self._make_landmark_head(
+            fpn_num=3, inchannels=cfg['out_channel'])
 
-    def _make_class_head(self,fpn_num=3,inchannels=64,anchor_num=2):
+    def _make_class_head(self, fpn_num=3, inchannels=64, anchor_num=2):
         classhead = nn.ModuleList()
         for i in range(fpn_num):
-            classhead.append(ClassHead(inchannels,anchor_num))
+            classhead.append(ClassHead(inchannels, anchor_num))
         return classhead
-    
-    def _make_bbox_head(self,fpn_num=3,inchannels=64,anchor_num=2):
+
+    def _make_bbox_head(self, fpn_num=3, inchannels=64, anchor_num=2):
         bboxhead = nn.ModuleList()
         for i in range(fpn_num):
-            bboxhead.append(BboxHead(inchannels,anchor_num))
+            bboxhead.append(BboxHead(inchannels, anchor_num))
         return bboxhead
 
-    def _make_landmark_head(self,fpn_num=3,inchannels=64,anchor_num=2):
+    def _make_landmark_head(self, fpn_num=3, inchannels=64, anchor_num=2):
         landmarkhead = nn.ModuleList()
         for i in range(fpn_num):
-            landmarkhead.append(LandmarkHead(inchannels,anchor_num))
+            landmarkhead.append(LandmarkHead(inchannels, anchor_num))
         return landmarkhead
 
-    def forward(self,inputs):
+    def forward(self, inputs):
         out = self.body(inputs)
 
         # FPN
@@ -116,12 +140,20 @@ class RetinaFace(nn.Module):
         feature3 = self.ssh3(fpn[2])
         features = [feature1, feature2, feature3]
 
-        bbox_regressions = torch.cat([self.BboxHead[i](feature) for i, feature in enumerate(features)], dim=1)
-        classifications = torch.cat([self.ClassHead[i](feature) for i, feature in enumerate(features)],dim=1)
-        ldm_regressions = torch.cat([self.LandmarkHead[i](feature) for i, feature in enumerate(features)], dim=1)
+        bbox_regressions = torch.cat(
+            [self.BboxHead[i](feature) for i, feature in enumerate(features)],
+            dim=1)
+        classifications = torch.cat(
+            [self.ClassHead[i](feature) for i, feature in enumerate(features)],
+            dim=1)
+        ldm_regressions = torch.cat([
+            self.LandmarkHead[i](feature) for i, feature in enumerate(features)
+        ],
+                                    dim=1)
 
         if self.phase == 'train':
             output = (bbox_regressions, classifications, ldm_regressions)
         else:
-            output = (bbox_regressions, F.softmax(classifications, dim=-1), ldm_regressions)
+            output = (bbox_regressions, F.softmax(classifications,
+                                                  dim=-1), ldm_regressions)
         return output
\ No newline at end of file
diff --git a/test_lynxi.py b/test_lynxi.py
new file mode 100755
index 0000000..943b2bc
--- /dev/null
+++ b/test_lynxi.py
@@ -0,0 +1,187 @@
+from genericpath import exists
+import os
+import sys
+import pickle
+import argparse
+import lyngor
+import numpy as np
+import torch
+
+TOP = os.environ['TOP']
+
+parser = argparse.ArgumentParser()
+parser.add_argument('-m', '--mode', default='null', type=str)
+parser.add_argument('-p', '--path', default='null', type=str)
+parser.add_argument('-i', '--imgdump', default='null', type=str)
+
+
+def pmodel_inletv3(modelType="Pytorch",
+                   modelFile="",
+                   buildType="apu",
+                   inputPart=None,
+                   outputPart=None,
+                   outputPath=''):
+    '''
+    modelType: 'Tensorflow','Keras','Keras_tf','MXNet','Caffe','Pytorch','ONNX'
+    modelFile: 离线模型的相关路径
+    buildType:
+        cpus: cpu模拟推理 (target='cpu', cpu_arch="x86", cc="g++")
+        apus: apu模拟推理 (target='apu', cpu_arch="x86", cc="g++")
+        apu:  apu板卡推理 (target='apu')
+    '''
+    print("[pmodel_inlet] lyngor version:{}, lyngor path:{}".format(
+        lyngor.version, lyngor))
+    if not os.path.exists(modelFile):
+        print("model file not exists.")
+
+    offlineModel = lyngor.DLModel()
+    offlineModel.load(modelFile,
+                      model_type=modelType,
+                      inputs_dict=inputPart,
+                      outputs=outputPart)
+
+    if buildType == "cpus":
+        offlineBuilder = lyngor.Builder(target='cpu',
+                                        cpu_arch="x86",
+                                        cc="g++",
+                                        is_map=True)
+    elif buildType == "apus":
+        offlineBuilder = lyngor.Builder(target='apu',
+                                        cpu_arch="x86",
+                                        cc="g++",
+                                        is_map=True)
+    elif buildType == "apu":
+        offlineBuilder = lyngor.Builder(target='apu', is_map=True)
+    else:
+        print("cannot support the buildType")
+    r_engine = offlineBuilder.build(offlineModel.graph,
+                                    offlineModel.params,
+                                    out_path=outputPath)
+
+
+def funcModel(targetFile: str):
+    if not os.path.exists(targetFile):
+        sys.exit(1)
+
+    myselfModelFile = "{}/curve/model_myself".format(TOP)
+    pmodel_inletv3(modelType="Pytorch",
+                   modelFile=targetFile,
+                   buildType='apu',
+                   inputPart={'input0': (1, 3, 640, 640)},
+                   outputPart=None,
+                   outputPath=myselfModelFile)
+    pass
+
+
+def loadPickle(binFile):
+    if not os.path.exists(binFile):
+        print("warn: {} not exists".format(binFile))
+        return None
+    with open(binFile, "rb") as fin:
+        ret = pickle.load(fin)
+    return ret
+
+
+def modelByRuntime(lynModelPath=None, input=None):
+    input = loadPickle(input)
+    if isinstance(input, torch.Tensor):
+        input = input.numpy()
+    input = np.ascontiguousarray(input)
+
+    modelLyn = lyngor.loader.load(path=lynModelPath, device=0, PDT=False)
+    modelLyn.run(data_format='numpy', **{"input0": input})
+    ret = modelLyn.get_output(data_format='numpy')
+    print("len ret: {}".format(len(ret)))
+    for i in range(len(ret)):
+        print("{}: {}".format(i, ret[i].shape))
+
+    return ret
+
+
+def measure_mse(list_target, list_compare, identifier):
+    '''
+    均方误差(MSE)是各数据偏离真实值差值的平方和的平均数
+    list_target  真实模型的推理结果
+    list_compare 编译模型的推理结果
+    '''
+    if not (isinstance(list_target, np.ndarray)
+            and isinstance(list_compare, np.ndarray)):
+        return None
+    ret = np.sum((np.float32(list_compare) - np.float32(list_target))**
+                 2) / len(list_target)
+    print("[均方误差MSE] 分段_{}: {}".format(identifier, ret))
+    return ret
+
+
+def measure_error_rate(list_target, list_compare, identifier):
+    '''
+    误差率：预测值相对真实值的误差值
+    list_target  真实模型的推理结果
+    list_compare 编译模型的推理结果
+    '''
+    ret = np.sqrt(np.sum((np.float32(list_compare) - np.float32(list_target))**2)) / \
+        np.sqrt(np.sum(np.float32(list_target)**2))
+    print("[误差率] 分段_{}: {}".format(identifier, ret))
+    return ret
+
+
+def measure_inlet(data_target, data_lynpy):
+    '''
+    data_target: [np0, np1, ...]
+    data_lynpy: [np0, np1, ...]
+    '''
+    # if not (data_target and data_lynpy):
+    #     print("warn: maybe none for input")
+    #     return None
+
+    # 多输出的分段评估
+    for index in range(len(data_target)):
+        data_flat_caffe = data_target[index].flatten()
+        data_flat_lynpy = data_lynpy[index].flatten()
+        measure_mse(data_flat_caffe, data_flat_lynpy, "{}".format(index))
+        measure_error_rate(data_flat_caffe, data_flat_lynpy,
+                           "{}".format(index))
+
+    # 多输出的整体评估
+    '''
+    data_caffe[0].numpy().flatten() pytorch -> numpy
+    tempTarget = np.concatenate(
+        (data_target[0].flatten(), data_target[1].flatten(),
+         data_target[2].flatten()),
+        axis=0)
+    tempMyself = np.concatenate(
+        (data_lynpy[0].flatten(), data_lynpy[1].flatten(),
+         data_lynpy[2].flatten()),
+        axis=0)
+    '''
+
+    tempTarget = np.concatenate([it.flatten() for it in data_target], axis=0)
+    tempMyself = np.concatenate([it.flatten() for it in data_lynpy], axis=0)
+    measure_mse(tempTarget, tempMyself, "整体")
+    measure_error_rate(tempTarget, tempMyself, "整体")
+
+
+def funcRun(lynxiFile: str, imgFile):
+    if not (os.path.exists(lynxiFile) or os.path.exists(imgFile)):
+        sys.exit(1)
+
+    ret = modelByRuntime("{}/Net_0".format(lynxiFile), imgFile)
+    tempFile = "{}/curve/output_myself.bin".format(TOP)
+    with open(tempFile, 'wb') as fin:
+        pickle.dump(ret, fin)
+    pass
+
+
+if __name__ == '__main__':
+    args = parser.parse_args()
+
+    if args.mode == "build":
+        funcModel(args.path)
+    elif args.mode == "run":
+        funcRun(args.path, args.imgdump)
+
+        measure_inlet(loadPickle("{}/curve/output_target.bin".format(TOP)),
+                      loadPickle("{}/curve/output_myself.bin".format(TOP)))
+    else:
+        print("error, cannot support the option")
+    pass
\ No newline at end of file
-- 
2.7.4

